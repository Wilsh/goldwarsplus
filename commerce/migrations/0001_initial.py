# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-08-30 22:17
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BuyListing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.PositiveIntegerField()),
                ('date_added', models.DateTimeField()),
            ],
            options={
                'ordering': ['-unit_price'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('item_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('chat_link', models.CharField(default='', max_length=120)),
                ('name', models.CharField(default='[no name provided]', max_length=200)),
                ('icon', models.CharField(default='', max_length=120)),
                ('description', models.TextField(default='No description provided')),
                ('type', models.CharField(default='', max_length=20)),
                ('rarity', models.CharField(default='', max_length=10)),
                ('level', models.PositiveSmallIntegerField(default=0)),
                ('vendor_value', models.PositiveIntegerField(default=0)),
                ('seen_on_trading_post', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField()),
            ],
            options={
                'ordering': ['item_id'],
            },
        ),
        migrations.CreateModel(
            name='ItemFlag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AccountBindOnUse', models.BooleanField(default=False)),
                ('AccountBound', models.BooleanField(default=False)),
                ('HideSuffix', models.BooleanField(default=False)),
                ('MonsterOnly', models.BooleanField(default=False)),
                ('NoMysticForge', models.BooleanField(default=False)),
                ('NoSalvage', models.BooleanField(default=False)),
                ('NoSell', models.BooleanField(default=False)),
                ('NotUpgradeable', models.BooleanField(default=False)),
                ('NoUnderwater', models.BooleanField(default=False)),
                ('SoulbindOnAcquire', models.BooleanField(default=False)),
                ('SoulBindOnUse', models.BooleanField(default=False)),
                ('Unique', models.BooleanField(default=False)),
                ('for_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='commerce.Item')),
            ],
            options={
                'ordering': ['for_item'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('recipe_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(default='', max_length=30)),
                ('output_item_count', models.PositiveSmallIntegerField(default=0)),
                ('min_rating', models.PositiveSmallIntegerField(default=0)),
                ('AutoLearned', models.BooleanField(default=False)),
                ('LearnedFromItem', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField()),
                ('output_item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commerce.Item')),
            ],
            options={
                'ordering': ['output_item_id'],
            },
        ),
        migrations.CreateModel(
            name='RecipeDiscipline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Artificer', models.BooleanField(default=False)),
                ('Armorsmith', models.BooleanField(default=False)),
                ('Chef', models.BooleanField(default=False)),
                ('Huntsman', models.BooleanField(default=False)),
                ('Jeweler', models.BooleanField(default=False)),
                ('Leatherworker', models.BooleanField(default=False)),
                ('Tailor', models.BooleanField(default=False)),
                ('Weaponsmith', models.BooleanField(default=False)),
                ('Scribe', models.BooleanField(default=False)),
                ('for_recipe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='commerce.Recipe')),
            ],
            options={
                'ordering': ['for_recipe'],
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_id', models.PositiveIntegerField()),
                ('count', models.PositiveSmallIntegerField()),
                ('for_recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commerce.Recipe')),
            ],
            options={
                'ordering': ['for_recipe'],
            },
        ),
        migrations.CreateModel(
            name='SellListing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.PositiveIntegerField()),
                ('date_added', models.DateTimeField()),
                ('for_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sell', to='commerce.Item')),
            ],
            options={
                'ordering': ['unit_price'],
            },
        ),
        migrations.AddField(
            model_name='buylisting',
            name='for_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buy', to='commerce.Item'),
        ),
    ]
